# tmux起動時のシェルをログインシェルにする
set -g default-shell "${SHELL}"

# tmuxを256色表示できるようにする
set -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# prefixキーをC-qに変更
set -g prefix C-q

# C-bのキーバインドを解除
unbind C-b

# スクロールバックの行数
set -g history-limit 20000

# Escape キーの待ち時間をなくす
set -s escape-time 0

# ステータスバーをトップに配置する
#set -g status-position top

# 左右のステータスバーの長さを決定する 
set -g status-left-length 90
set -g status-right-length 90

# #P => ペイン番号
# 最左に表示
set -g status-left '#H:[#P]:#{?client_prefix,#[reverse],}C-q'

# 現在時刻を最右に表示
set -g status-right '[%Y-%m-%d(%a) %H:%M]'

# ステータスバーを1秒毎に描画し直す
set -g status-interval 1

# センタライズ（主にウィンドウ番号など）
set -g status-justify centre

# ステータスバーの色を設定する
set -g status-bg colour238
set -g status-fg colour255

# アクティブなペインを目立たせる
#set -g window-style 'bg=colour237'
#set -g window-active-style 'bg=colour234'

# メッセージの色を設定する
set -g message-style 'bg=colour195,fg=colour236'

# メッセージの表示時間
set -g display-time 2000

# ペインのボーダーの色を変える
set -g pane-active-border-style 'fg=colour44'
set -g pane-border-style 'fg=colour244'

# ペイン番号の表示時間
set -g display-panes-time 10000

# vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペインの移動(ローテート)
bind -n C-o select-pane -t :.+

# vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ペインの幅を等しくする
bind ^h select-layout even-horizontal

# ペインの高さを等しくする
bind ^v select-layout even-vertical

# \ でペインを縦分割する
bind \ split-window -h -c '#{pane_current_path}'

# - でペインを縦分割する
bind - split-window -v -c '#{pane_current_path}'

# 全ペインに同時送信
bind b setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"

# ウィンドウのインデックスを１から始める
set -g base-index 1

# ペインのインデックスを１から始める
setw -g pane-base-index 1

# マウス操作を有効にする
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# コピーモード

##vimキーバインドを使う
setw -g mode-keys vi

##C-a で行頭、C-e で行末へ移動
bind -T copy-mode-vi C-a send -X start-of-line
bind -T copy-mode-vi C-e send -X end-of-line

## クリップボードに送る
### Windows
if "uname -a | grep Microsoft" '\
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "clip.exe"; \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "clip.exe"; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "clip.exe"\
'
### Mac
if "[[ $OSTYPE =~ darwin.* ]]" '\
  bind-key -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"; \
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "pbcopy"\
'

## 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection

## 'V' で行選択
bind -T copy-mode-vi V send -X select-line

## 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle

